---
import {getCollection} from 'astro:content';
import Layout from "../../../layouts/Layout.astro";
import RecipeCard from "../../../components/RecipeCard.astro";
import Timer from "../../../components/Timer.astro";
import {getRelativeLocaleUrl} from "astro:i18n";

export async function getStaticPaths() {
	const recipes = await getCollection('recipes');

	function extractMethod(slug: string) {
		// Folders inside recipes mean method
		return slug.split('/')[0]
	}

	const byMethod = new Map()
	recipes.forEach(recipe => {
		const method = extractMethod(recipe.slug);
		if (!method) {
			return
		}
		const collection = byMethod.get(method) ?? [];
		collection.push(recipe);
		byMethod.set(method, collection)
	})

	return [
		...[...byMethod.entries()].map(([key, value]) => {
			return {
				params: {slug: key}, props: {entries: value, method: key},
			}
		}),
		...recipes.map(entry => ({
			params: {slug: entry.slug}, props: {entry, method: extractMethod(entry.slug)},
		}))
	];
}

const {entry, entries, method} = Astro.props;

const {Content} = (await entry?.render()) ?? {};
---
<Layout>
	{Content ?
		<Content/> :
		<>
			<h1 class="title">{method}</h1>
			<div>
				{entries.map(p => (
					<RecipeCard recipe={p} link={`recipes/${p.slug}`}/>
				))}
			</div>
		</>}
</Layout>

<style>
	.wrapper {
		display: flex;
	}
</style>


