---
import type { CollectionEntry } from 'astro:content'

import { Icon } from 'astro-icon/components'
import { getRelativeLocaleUrl } from 'astro:i18n'
interface Props {
  recipe: CollectionEntry<'recipes'>
}

const { recipe } = Astro.props
// TODO: try to use the same values for icon and name
const properties = [
  { icon: 'coffee', name: 'coffeeWeight' },
  { icon: 'water', name: 'water' },
  { icon: 'time', name: 'time' },
  { icon: 'temperature', name: 'temperature' }
] as const

const locale = Astro.currentLocale || 'en'
const href = getRelativeLocaleUrl(locale, `recipes/${recipe.slug.split(`${locale}/`)[1]}`)
---

<article class="card">
  <a class="link" {href}>{recipe.data.name}</a>
  <div class="properties">
    {
      properties
        .filter(it => recipe.data.properties[it.name])
        .map(it => (
          <div class="property">
            <Icon name={it.icon} />
            {recipe.data.properties[it.name]}
          </div>
        ))
    }
  </div>
  <div class="author">
    {
      recipe.data.authorImg && (
        <Icon class="author__icon" name={recipe.data.authorImg} />
      )
    }
    {recipe.data.author}
  </div>
</article>

<style>
  .card {
    position: relative;
    box-shadow: var(--common-box-shadow);
    padding: 24px;
    border-radius: 16px;
    background: var(--color-secondary-background);
    display: flex;
    flex-flow: column;
  }

  .link {
    font-size: 18px;
    font-weight: 600;
    margin-block-end: 16px;
    color: inherit;
    text-decoration: none;
  }

  .link:visited {
    color: inherit;
  }

  .link::after {
    position: absolute;
    inset: 0;
    content: '';
  }

  .properties {
    display: flex;
    gap: 8px;
  }

  .property {
    display: flex;
    align-items: center;
    gap: 4px;
  }

  .author {
    margin-block-start: 12px;
    display: flex;
    align-items: center;
    gap: 8px;
  }

  .author__icon {
    width: 24px;
    height: 24px;
  }
</style>
