---
import type { CollectionEntry } from 'astro:content'

import { getRelativeLocaleUrl } from 'astro:i18n'

import { commonMessages } from '@/i18n/locales/common/en'

import Author from './Author.astro'
import RecipeProperties from './RecipeProperties.astro'

interface Props {
  hideAuthor?: boolean
  recipe: CollectionEntry<'recipes'>
}

const { hideAuthor, recipe } = Astro.props

const locale = Astro.currentLocale || 'en'
const messages = commonMessages(locale)
const href = getRelativeLocaleUrl(locale, `recipes/${recipe.id.split(`${locale}/`)[1]}`)
---

<article class="card">
  <div class="header">
    {hideAuthor && (
      <h2 class="subtitle">{messages[recipe.data.method as keyof typeof messages]}</h2>
    )}
    <a class="link" {href}>{recipe.data.name}</a>
  </div>
  <RecipeProperties properties={recipe.data.properties} />
  {!hideAuthor && <Author authorName={recipe.data.authorName} authorRef={recipe.data.author} />}
</article>

<style>
  .card {
    position: relative;
    box-shadow: var(--common-box-shadow);
    padding: 24px;
    border-radius: 16px;
    background: var(--color-secondary-background);
    display: flex;
    flex-flow: column;
    gap: 16px;
  }

  .header {
    display: flex;
    flex-direction: column;
    gap: 8px;
  }

  .subtitle {
    margin: 0;
    font-size: 12px;
    font-weight: 400;
    text-transform: uppercase;
    color: var(--text-secondary);
  }

  .link {
    font-size: 18px;
    font-weight: 600;
    color: inherit;
    text-decoration: none;
  }

  .link:visited {
    color: inherit;
  }

  .link::after {
    position: absolute;
    inset: 0;
    content: '';
  }
</style>
